class HDHandgun_NotGitVersion:HDWeapon{
	bool wronghand;
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	action void A_SwapHandguns(){
		let mwt=SpareWeapons(findinventory("SpareWeapons"));
		if(!mwt){
			setweaponstate("nope");
			return;
		}
		int pistindex=mwt.weapontype.find(invoker.getclassname());
		if(pistindex==mwt.weapontype.size()){
			setweaponstate("nope");
			return;
		}
		A_WeaponBusy();
		int bk=mwt.weaponstatus0[pistindex];
		mwt.weaponstatus0[pistindex]=invoker.weaponstatus[0];
		invoker.weaponstatus[0]=bk;
		bk=mwt.weaponstatus1[pistindex];
		mwt.weaponstatus1[pistindex]=invoker.weaponstatus[1];
		invoker.weaponstatus[1]=bk;
		bk=mwt.weaponstatus2[pistindex];
		mwt.weaponstatus2[pistindex]=invoker.weaponstatus[2];
		invoker.weaponstatus[2]=bk;
		bk=mwt.weaponstatus3[pistindex];
		mwt.weaponstatus3[pistindex]=invoker.weaponstatus[3];
		invoker.weaponstatus[3]=bk;
		bk=mwt.weaponstatus4[pistindex];
		mwt.weaponstatus4[pistindex]=invoker.weaponstatus[4];
		invoker.weaponstatus[4]=bk;
		bk=mwt.weaponstatus5[pistindex];
		mwt.weaponstatus5[pistindex]=invoker.weaponstatus[5];
		invoker.weaponstatus[5]=bk;
		bk=mwt.weaponstatus6[pistindex];
		mwt.weaponstatus6[pistindex]=invoker.weaponstatus[6];
		invoker.weaponstatus[6]=bk;
		bk=mwt.weaponstatus7[pistindex];
		mwt.weaponstatus7[pistindex]=invoker.weaponstatus[7];
		invoker.weaponstatus[7]=bk;
		invoker.wronghand=!invoker.wronghand;
	}
}

// ------------------------------------------------------------
// AutoMag
// ------------------------------------------------------------

class HD_AutoMag:HDHandgun_NotGitVersion{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "SP-50 Auto Mag"
		//$Sprite "5MCPA0"
		+hdweapon.fitsinbackpack
		+hdweapon.reverseguninertia
		scale 0.63;
		weapon.selectionorder 95;
		weapon.slotpriority 0.996;
		weapon.slotnumber 2;
		weapon.kickback 30;
		weapon.bobrangex 0.1;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		weapon.bobstyle "normal";
		obituary "%k's pistol punched a big hole through %o.";
		inventory.pickupmessage "You got the .50 AM Mega Class pistol!";
		hdweapon.nicename "SP-50 Auto Mag (Mega Class)";
		hdweapon.refid HDLD_50PSTL;
		inventory.maxamount 3;
	}
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse){return GetSpareWeaponRegular(newowner,reverse);}
	override double weaponbulk(){
		int mgg=weaponstatus[PI50_MAG];
		return 30+(mgg<0?0:(ENC_9MAG_LOADED+mgg*ENC_9_LOADED));
	}
	override double gunmass(){
		return 13;
	}
	override string,double getpickupsprite(){
		string spr;
		if(weaponstatus[PI50_CHAMBER]<1){
			if(weaponstatus[PI5F_FIREMODE]<0)spr="B";
			else spr="D";
		}else{
			if(weaponstatus[PI5F_FIREMODE]<0)spr="A";
			else spr="C";
		}
		return "5MCP"..spr.."0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD50AM_Mag")));
			if(nextmagloaded>=7){
				sb.drawimage("50AMA0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(3,3));
			}else if(nextmagloaded<1){
				sb.drawimage("50AMB0",(-46,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(3,3));
			}else sb.drawbar(
				"50AMNORM","50AMGREY",
				nextmagloaded,7,
				(-46,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("HD50AM_Mag"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
		}
		sb.drawwepcounter(hdw.weaponstatus[PI5F_FIREMODE]+1,
			-22,-10,"blank","RBRSA3A7","STFULAUT"
		);
		sb.drawwepnum(hdw.weaponstatus[PI50_MAG],7);
		if(hdw.weaponstatus[PI50_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
	}
		override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int scaledyoffset=47;
			double dotoff=max(abs(bob.x),abs(bob.y));
			if(dotoff<20){
				sb.drawimage(
					whichdot,(0,0)+bob*1.6,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					alpha:0.8-dotoff*0.04
				);
			}
			sb.drawimage(
				"MCS_0000",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER
			);
	}
	
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..(weaponstatus[PI5F_FIREMODE]<0?"":(WEPHELP_FIREMODE.."  Semi/Auto\n"))
		..WEPHELP_ALTRELOAD.."  Quick-Swap (if available)\n"
		..WEPHELP_RELOADRELOAD
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	
	action void A_CheckPistolHand(){
		if(invoker.wronghand)player.getpsprite(PSP_WEAPON).sprite=getspriteindex("6MCGA0");
	}
	
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("HD50AM_Ammo"))owner.A_DropInventory("HD50AM_Ammo",amt*7);
			else owner.A_DropInventory("HD50AM_Mag",amt);
		}
	}
	
	override void loadoutconfigure(string input){
		int selectfire=getloadoutvar(input,"selectfire",1);
		if(!selectfire){
			weaponstatus[0]&=~PI5F_FIREMODE;
			weaponstatus[0]&=~PI5F_FIREMODE;
		}else if(selectfire>0){
			weaponstatus[0]|=PI5F_FIREMODE;
		}
		if(weaponstatus[0]&PI5F_FIREMODE){
			int firemode=getloadoutvar(input,"auto",1);
			if(!firemode)weaponstatus[0]&=~PI5F_FIREMODE;
			else if(firemode>0)weaponstatus[0]|=PI5F_FIREMODE;
		}
	}
	states{
		select0:
		5MCG A 0{
			if(countinv("NulledWeapon"))invoker.wronghand=false;
			else A_CheckPistolHand();
		}
		#### A 0 A_JumpIf(invoker.weaponstatus[PI50_CHAMBER]>0,2);
		#### B 0;
		#### A 1 A_Raise();
		#### A 1 A_Raise(30);
		#### A 1 A_Raise(30);
		#### A 1 A_Raise(24);
		#### A 1 A_Raise(18);
		wait;
	deselect0:
		5MCG A 0 A_CheckPistolHand();
		#### A 0 A_JumpIf(invoker.weaponstatus[PI50_CHAMBER]>0,2);
		#### B 0;
		#### AAA 1 A_Lower();
		#### A 1 A_Lower(18);
		#### A 1 A_Lower(24);
		#### A 1 A_Lower(30);
		wait;
		
	ready:
		5MCG A 0 A_CheckPistolHand();
		#### A 0 A_JumpIf(invoker.weaponstatus[PI50_CHAMBER]>0,2);
		#### B 0;
		#### # 1{
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
		}goto readyend;
	user3:
		#### A 0 A_MagManager("HD50AM_Mag");
		goto ready;
		user2:
	firemode:
		---- A 0{
			int pa=invoker.weaponstatus[PI5F_FIREMODE];
			if(pa>=0){
				invoker.weaponstatus[PI5F_FIREMODE]=pa==0?1:0;
			}
		}goto nope;
	altfire:
		---- A 0{
			invoker.weaponstatus[0]&=~PI5F_JUSTUNLOAD;
			if(
				invoker.weaponstatus[PI50_CHAMBER]!=2
				&&invoker.weaponstatus[PI50_MAG]>0
			)setweaponstate("chamber_manual");
		}goto nope;
	chamber_manual:
		---- A 0{
			if(
				!(invoker.weaponstatus[0]&PI5F_JUSTUNLOAD)
				&&(
					invoker.weaponstatus[PI50_CHAMBER]==2
					||invoker.weaponstatus[PI50_MAG]<1
				)
			)setweaponstate("nope");
		}
		---- B 3 offset(0,34);
		#### C 4 offset(0,37){
			A_MuzzleClimb(frandom(0.4,0.5),-frandom(0.6,0.8));
			A_StartSound("weapons/pismagclick",CHAN_WEAPON);
			int psch=invoker.weaponstatus[PI50_CHAMBER];
			invoker.weaponstatus[PI50_CHAMBER]=0;
			if(psch==2){
				A_SpawnItemEx("HD50AM_Ammo",cos(pitch*12),0,height-8-sin(pitch)*12,1,2,3,0);
			}else if(psch==1){
				A_SpawnItemEx("HDSpent50AM",
					cos(pitch)*12,0,height-7-sin(pitch)*12,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
			}
			if(invoker.weaponstatus[PI50_MAG]>0){
				invoker.weaponstatus[PI50_CHAMBER]=2;
				invoker.weaponstatus[PI50_MAG]--;
			}
		}
		#### B 3 offset(0,35);
		#### B 0 A_ReFire();
		goto ready;
	althold:
	hold:
		goto nope;
	fire:
		---- A 0{
			invoker.weaponstatus[0]&=~PI5F_JUSTUNLOAD;
			if(invoker.weaponstatus[PI50_CHAMBER]==2)setweaponstate("shoot");
			else if(invoker.weaponstatus[PI50_CHAMBER]>0)setweaponstate("chamber_manual");
		}goto nope;
	shoot:
		#### C 1{
			if(invoker.weaponstatus[PI50_CHAMBER]==2)A_GunFlash();
		}
		#### B 1{
			if(hdplayerpawn(self)){
				hdplayerpawn(self).gunbraced=false;
				A_GiveInventory("IsMoving",1);
			}
			A_MuzzleClimb(
				-frandom(0.8,1.1),-frandom(3.2,3.6),
				frandom(0.4,0.6),frandom(1.6,1.8)
			);
		}
		#### D 1 A_WeaponReady(WRF_NOFIRE);
		#### D 0{
			A_SpawnItemEx("HDSpent50AM",
				cos(pitch)*12,0,height-7-sin(pitch)*12,
				vel.x,vel.y,vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
			invoker.weaponstatus[PI50_CHAMBER]=0;
			if(invoker.weaponstatus[PI50_MAG]<1){
				A_StartSound("weapons/pistoldry",7,volume:0.9);
				setweaponstate("nope");
			}
		}
		#### E 1{
			A_WeaponReady(WRF_NOFIRE);
			invoker.weaponstatus[PI50_CHAMBER]=2;
			invoker.weaponstatus[PI50_MAG]--;
			if(invoker.weaponstatus[PI50_MAG]==1){
				let pnr=HDPlayerPawn(self);
				if(
					pnr&&countinv("IsMoving")
					&&pnr.fatigue<12
				)pnr.fatigue++;
				A_GiveInventory("IsMoving",5);
				A_Refire("fire");
			}else A_Refire();
		}goto ready;
	flash:
		6MCF A 0 A_JumpIf(invoker.wronghand,2);
		5MCF A 0;
		#### A 1 bright{
			HDFlashAlpha(64);
			A_Light1();
			actor p=spawn("HDBullet50AM",pos+(0,0,height-6),ALLOW_REPLACE);
			p.target=self;p.angle=angle;p.pitch=pitch;
			if(p){
				p.vel+=self.vel+(frandom(-2.,2.),frandom(-2.,2.),frandom(-2.,2.));
				p.speed+=10*frandom(-2.,2.);
			}
			invoker.weaponstatus[PI50_CHAMBER]=1;
			A_ZoomRecoil(0.995);
			A_MuzzleClimb(-frandom(1.4,2.2),-frandom(0.4,1.6));
		}
		#### A 0 A_StartSound("weapons/pistol/magnum",CHAN_WEAPON,volume:1.0);
		#### B 1 bright HDFlashAlpha(32);
		#### A 0 A_Light0(); 
		stop;
	unload:
		---- A 0{
			invoker.weaponstatus[0]|=PI5F_JUSTUNLOAD;
			if(invoker.weaponstatus[PI50_MAG]>=0)setweaponstate("unmag");
		}goto chamber_manual;
	loadchamber:
		---- A 0 A_JumpIf(invoker.weaponstatus[PI50_CHAMBER]>0,"nope");
		---- A 1 offset(0,34) A_StartSound("weapons/pocket",CHAN_7);
		---- A 1 offset(2,36);
		#### B 3 offset(5,40);
		#### B 6 offset(4,39){
			if(countinv("HD50AM_Ammo")){
				A_TakeInventory("HD50AM_Ammo",1,TIF_NOTAKEINFINITE);
				invoker.weaponstatus[PI50_CHAMBER]=2;
				A_StartSound("weapons/pischamber1",CHAN_7);
			}
		}
		#### A 3 offset(2,36);
		#### A 2 offset(0,34);
		goto readyend;
	reload:
		---- A 0{
			invoker.weaponstatus[0]&=~PI5F_JUSTUNLOAD;
			if(invoker.weaponstatus[PI50_MAG]>=7)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"HD50AM_Mag")){
				if(countinv("HD50AM_Ammo"))setweaponstate("loadchamber");
				else setweaponstate("nope");
			}
		}goto unmag;
	unmag:
		---- A 1 offset(0,34){
			A_SetCrosshair(21);
		}
		---- A 1 offset(1,38);
		---- A 2 offset(2,42);
		---- A 3 offset(3,46) A_StartSound("weapons/pismagclick",CHAN_WEAPON);
		---- A 0{
			int pmg=invoker.weaponstatus[PI50_MAG];
			invoker.weaponstatus[PI50_MAG]=-1;
			if(pmg<0)setweaponstate("magout");
			else if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD50AM_Mag",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD50AM_Mag",pmg);
				setweaponstate("magout");
			}
			else{
				HDMagAmmo.GiveMag(self,"HD50AM_Mag",pmg);
				A_StartSound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		---- AAA 5 offset(0,46) A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		goto magout;
	magout:
		---- A 0{
			if(invoker.weaponstatus[0]&PI5F_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		---- A 4 offset(0,46) A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		---- A 0 A_StartSound("weapons/pocket",CHAN_WEAPON);
		---- A 5 offset(0,46) A_MuzzleClimb(frandom(-0.2,0.8),frandom(-0.2,0.4));
		---- A 3;
		#### A 0{
			let mmm=hdmagammo(findinventory("HD50AM_Mag"));
			if(mmm){
				invoker.weaponstatus[PI50_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/pismagclick",CHAN_BODY);
			}
			if(
				invoker.weaponstatus[PI50_CHAMBER]<1
				&&invoker.weaponstatus[PI50_MAG]>0
			){
				invoker.weaponstatus[PI50_CHAMBER]=2;
				invoker.weaponstatus[PI50_MAG]--;
			}else setweaponstate("reloadend");
		}
		#### A 3 offset(0,48) A_StartSound("weapons/pischamber2",CHAN_WEAPON);
		#### A 2 offset(0,45);
		goto reloadend;
	reloadend:
		#### A 2 offset(3,46);
		#### A 1 offset(2,42);
		#### A 1 offset(2,38);
		#### A 1 offset(1,34);
		#### A 0 A_JumpIf(pressingreload()||pressingunload(),"nope");
		goto ready;
	
		user1:
	swappistols:
		#### A 0 A_SwapHandguns();
		#### A 1 offset(0,40);
		#### A 1 offset(0,52);
		#### A 0 A_JumpIf(!invoker.wronghand,"swappistols2");
	swappistols1:
		5MCS AB 1;
		6MCG A 1 offset(-4,40);
		goto nope;
	swappistols2:
		5MCS BA 1;
		5MCG A 1 offset(4,40);
		goto nope;

	spawn:
		5MCP ABCD -1 nodelay{
			if(invoker.weaponstatus[PI50_CHAMBER]<1){
				if(invoker.weaponstatus[PI5F_FIREMODE]<0)frame=1;
				else frame=3;
			}else{
				if(invoker.weaponstatus[PI5F_FIREMODE]<0)frame=0;
				else frame=2;
			}
		}stop;
	}
	override void initializewepstats(bool idfa){
		int autobak=weaponstatus[PI5F_FIREMODE];
		weaponstatus[0]=0;
		weaponstatus[PI50_MAG]=7;
		weaponstatus[PI50_CHAMBER]=2;
		if(idfa)weaponstatus[PI5F_FIREMODE]=max(0,autobak);
		else weaponstatus[PI5F_FIREMODE]=-1;
	}
}

enum pistol50status{
	PI5F_SELECTFIRE=1,
	PI5F_FIREMODE=2,
	PI5F_JUSTUNLOAD=4,

	PI50_FLAGS=0,
	PI50_MAG=1,
	PI50_CHAMBER=2, //0 empty, 1 spent, 2 loaded
};

class HD_AutoMagFA:HDWeaponGiver{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "MP-50 Auto Mag (Machine Pistol Conversion)"
		//$Sprite "5MCPC0"
		+hdweapon.fitsinbackpack
		hdweapon.refid HDLD_50PSTLA;
		hdweapon.nicename "MP-50 Auto Mag (Anti-Personnel)";
		hdweapongiver.bulk 34;
		hdweapongiver.weapontogive "HD_AutoMag";
		inventory.icon "5MCPC0";
		hdweapongiver.config "selectfire";
		hdweapongiver.weprefid HDLD_50PSTL;
	}
}

//.50 Action Mega (pretty much .50 AE)

class HDBullet50AM:HDBullet{
	default{
		pushfactor 0.325;
		mass 260;
		speed HDCONST_MPSTODUPT * 770;
		accuracy 180;
		Stamina 1270;
		woundhealth 27;
		HDBulletActor.Hardness 2;
		hdbullet.distantsounder "DoubleDistantRifle";
	}
}
//4.3.3c 50AM
/*class HDBullet50AM:HDBullet{
	default{
		pushfactor 0.325;
		mass 1563;
		speed 935;
		accuracy 8;
		woundhealth 13;
		hdbullet.distantsounder "DoubleDistantRifle";
	}
}
*/
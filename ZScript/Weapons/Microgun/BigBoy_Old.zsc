class HDMicrogun:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "PS-451"
		//$Sprite "P20PA0"

		-hdweapon.reverseguninertia
		+hdweapon.fitsinbackpack
		weapon.selectionorder 60;
		weapon.slotnumber 8;
		weapon.kickback 30;
		weapon.bobrangex 0.21;
		weapon.bobrangey 0.86;
		scale 0.6;
		inventory.pickupmessage "You got the HS776 Microgun!";
		obituary "%o was turned into swiss cheese by %k's rotary monstrosity.";
		hdweapon.barrelsize 40,4,2;
		tag "HS776 Microgun";
		//hdweapon.refid HDLD_MICROGUN_DISPOSABLE;
	}
	override string pickupmessage(){
		if(weaponstatus[1]&MCRGS_AMMO)return string.format("%s It is empty.",super.pickupmessage());
		else return string.format("%s Turn them into swiss cheese!",super.pickupmessage());
		return super.pickupmessage();
	}
	
	static double Fire(actor caller,int choke=1){
		double spread=6.;
		double speedfactor=1.;
		let mcrg=HDMicrogun(caller.findinventory("HDMicrogun"));
		if(mcrg)

		spread=5.5-0.5*1;

		let p=HDBulletActor.FireBullet(caller,"HDB_776",
			spread:spread,amount:1
		);
		distantnoise.make(p,"world/riflefar  ");
		caller.A_StartSound("weapons/bigrifle",CHAN_WEAPON,CHANF_OVERLAP);
		return spread;
	}
	
	action void A_FireMicrogun2(){
		invoker.Fire(self);
		A_GunFlash();
		vector2 shotrecoil=(randompick(-1,1),-2.6);
		A_MuzzleClimb(0,0,-frandom(0.1,0.3),-frandom(0.4,0.8));
	}
	
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}
	override void tick(){
		super.tick();
		drainheat(MCRGS_HEAT,6);
	}
	override void postbeginplay(){
		super.postbeginplay();
	}
	override double gunmass(){
		double amt=weaponstatus[PS20S_CHAMBER];
		return 90;
	}
	override double weaponbulk(){
		return 70;
	}
	
	override string,double getpickupsprite(){return "P20PA0",1.;}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			sb.drawimage("P20PA0",(-48,-10),sb.DI_SCREEN_CENTER_BOTTOM,scale:(0.7,0.7));
			sb.drawnum(hpl.countinv("HDPS20"),-45,-8,sb.DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
		}
		if(hdw.weaponstatus[PS20S_CHAMBER]>1)sb.drawwepdot(-16,-10,(5,3));
	}
	
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_UNLOAD.."   Throw\n"
		;
	}
	
	states{
	droop:
		TNT1 A 1{
			if(pitch<frandom(5,8)&&(!gunbraced())){
				if(countinv("IsMoving")>2 && countinv("PowerStrength")<1){    
					A_MuzzleClimb(frandom(-0.2,0.2),
						frandom(0.1,clamp(1-pitch,0.1,0.3)));
				}else{
					A_MuzzleClimb(frandom(-0.06,0.06),
						frandom(0.1,clamp(1-pitch,0.06,0.12)));
				}
			}
		}loop;
	
	select0:
		MCRG A 0 A_Overlay(2,"droop");
		goto select0bfg;
	deselect0:
		MCRG A 0;
		goto deselect0bfg;
	ready:
		MCRG A 1 A_WeaponReady(WRF_ALL);
		goto readyend;
	fire:
	MCRG A 0 A_StartSound("weapons/xm556microgun/speenup",CHAN_7,volume:1);
	MCRG AB 6; //A_StartSound("weapons/xm556microgun/speen",CHAN_7);
	MCRG AB 4; //A_StartSound("weapons/xm556microgun/speen",CHAN_7);
	MCRG ABAB 2; //A_StartSound("weapons/xm556microgun/speen",CHAN_7);
	MCRG ABABAB 1; //A_StartSound("weapons/xm556microgun/speen",CHAN_7);
	HailStorm:
		MCRF AB 1 bright{
			/*if(invoker.weaponstatus[PS20S_CHAMBER]<2){
				setweaponstate("unload");
				return;
			}*/
			A_StartSound("weapons/xm556microgun/speen",CHAN_7);
			A_GunFlash();
			//A_StartSound("weapons/ps20fire",CHAN_WEAPON);
			A_FireMicrogun2();
			//invoker.weaponstatus[PS20S_CHAMBER]=1;
			invoker.weaponstatus[MCRGS_AMMO]-=1;
		}
		#### A 0 A_ReFire("HailStorm");
		goto funisover;
	funisover:
	//MCRG A 0 A_StartSound("weapons/vulcandown",CHAN_7);
	MCRG A 0 A_StartSound("weapons/xm556microgun/speendown",CHAN_7,volume:1);
	MCRG ABABABABABAB 1; //A_StartSound("weapons/xm556microgun/speen",CHAN_7);
	MCRG ABABAB 2; //A_StartSound("weapons/xm556microgun/speen",CHAN_7);
	MCRG ABAB 4; //A_StartSound("weapons/xm556microgun/speen",CHAN_7);
	MCRG AB 6; //A_StartSound("weapons/xm556microgun/speen",CHAN_7);
	goto readyend;
	flash:
		TNT1 A 1 bright{
			HDFlashAlpha(0,true);
			A_Light1();
		}
		TNT1 A 2{
			A_ZoomRecoil(0.5);
			A_Light0();
		}
		stop;
	unload:
	---- A 0;
	YEET:
		---- A 1
		{
		if(player&&hdweapon(player.readyweapon)){
		 player.cmd.buttons|=BT_ZOOM;
		 DropInventory(player.readyweapon);
		}
		}
		TNT1 A 0;
	goto nope;
	
		spawn:
		SMP1 A -1;
	loop;

	}
	override void InitializeWepStats(bool idfa){
		weaponstatus[MCRGS_AMMO]=900;
		if(!idfa){
			weaponstatus[0]=0;
			weaponstatus[PS20S_HEAT]=0;
		}
	}
}
enum xm776microgunstatus{
	MCRGF_JUSTUNLOAD=1,

	MCRGS_STATUS=0,
	MCRGS_AMMO=1,
	MCRGS_HEAT=2,
	MCRGS_SPIN=3,
};
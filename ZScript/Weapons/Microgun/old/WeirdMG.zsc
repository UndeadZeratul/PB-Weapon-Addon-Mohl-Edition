// ------------------------------------------------------------
// AutoCannon
// ------------------------------------------------------------

//const HDLD_KELENKEN_WP="hwz";

class HD_FDChaingun:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Kelenken"
		//$Sprite "ATCPA0"
		-hdweapon.fitsinbackpack
		//+inventory.cheatnotweapon
		obituary "%k made %o cease to exist.";
		weapon.selectionorder 24;
		weapon.slotnumber 7;
		weapon.kickback 90;
		weapon.bobrangex 1;
		weapon.bobrangey 1;
		weapon.bobspeed 1;
		scale 0.8;
		inventory.pickupmessage "You got th- Wait, what is this?";
		hdweapon.barrelsize 42,1.5,3;
		//hdweapon.refid HDLD_KELENKEN_WP;
		tag "Odd Machinegun"; 
	}
	
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}

	override double gunmass(){
			return 27.5;
	}
	
	override void tick(){
		super.tick();
		drainheat(CHGGS_HEAT,6);
	}
	
	override double weaponbulk(){
		double blx=245;
		int mgg=weaponstatus[CHGGS_MAG];
		return blx+(mgg<0?0:((ENC_35MMBELTBOX_LOADED)+mgg*ENC_BRONTOSHELLLOADED));
	}
	
	override void failedpickupunload(){
		failedpickupunloadmag(CHGGS_MAG,"HD_PB_7mmBeltBox");
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,250);
			if(owner.countinv("SevenMilAmmo"))owner.A_DropInventory("SevenMilAmmo",amt*250);
			else owner.A_DropInventory("SevenMilAmmo",amt);
		}
	}
	override void ForceBasicAmmo(){
		owner.A_TakeInventory("SevenMilAmmo");
		owner.A_TakeInventory("HD_PB_7mmBeltBox");
		owner.A_GiveInventory("HD_PB_7mmBeltBox");
	}
	override string,double getpickupsprite(){
		return "HWTP"..((weaponstatus[CHGGS_MAG]<0)?"B":"A").."0",1.;
	}
	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel==1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("SevenMilAmmo")));
			if(nextmagloaded>=250){
				sb.drawimage("HW0BA0",(-49,-3),sb.DI_SCREEN_CENTER_BOTTOM,scale:(1,1));
			}else if(nextmagloaded<1){
				sb.drawimage("HW0BB0",(-49,-3),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.,scale:(1,1));
			}else sb.drawbar(
				"HW0BNORM","HW0BGREY",
				nextmagloaded,250,
				(-49,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("SevenMilAmmo"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM);
		}
		sb.drawwepnum(hdw.weaponstatus[CHGGS_MAG],250);
		if(hdw.weaponstatus[CHGGS_CHAMBER]==2)sb.drawwepdot(-16,-10,(3,1));
	}
	override string gethelptext(){
		return
		WEPHELP_FIRESHOOT
		..WEPHELP_RELOAD.."  Reload\n"
		..WEPHELP_MAGMANAGER
		..WEPHELP_UNLOADUNLOAD
		;
	}
	states{
	
	droop:
		TNT1 A 1{
			if(pitch<frandom(8,9)&&(!gunbraced())){
				if(countinv("IsMoving")>2 && countinv("PowerStrength")<1){    
					A_MuzzleClimb(frandom(-0.075,0.075),
						frandom(0.1,clamp(1-pitch,0.05,0.6)));
				}else{
					A_MuzzleClimb(frandom(-0.045,0.045),
						frandom(0.1,clamp(1-pitch,0.03,0.4)));
				}
			}
		}loop;
		
	
	select0:
		FDGG A 0 A_Overlay(2,"droop");
		#### A 0;
		goto select0bfg;
	deselect0:
		FDGG A 0;
		#### A 0;
		goto deselect0bfg;

	ready:
		FDGG A 0;
		#### A 0;
		#### A 1{
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
		}
		goto readyend;
	user3:
		---- A 0 A_MagManager("HD_PB_7mmBeltBox");
		goto ready;
	altfire:
	althold:
		goto nope;
	hold:
		#### A 1;
		goto nope;
	fire:
		FDGG A 0;
	fire2:
		#### A 1{
			if(invoker.weaponstatus[CHGGS_CHAMBER]==2){
				A_GunFlash();
				A_WeaponOffset(frandom(-3,3),frandom(30,33));
			}else{
				if(invoker.weaponstatus[CHGGS_MAG]>0)setweaponstate("chamberfired");
				else setweaponstate("nope");
			}
		}
	chamberfired:
		#### B 1 {
		//A_StartSound("weapons/autocannonload",CHAN_7,0,0.25);
		if(invoker.weaponstatus[CHGGS_MODDED]>0)A_SetTics(1);}
		#### C 1{
		if(invoker.weaponstatus[CHGGS_MODDED]>0)A_SetTics(1);
			if(invoker.weaponstatus[CHGGS_CHAMBER]==1){
				A_SpawnItemEx("HD_Downwards776Casing_PB",
					cos(pitch)*10,0,height-10-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				A_SpawnItemEx("HDFlyingBeltLink",
					cos(pitch)*10,0,height-10-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				invoker.weaponstatus[CHGGS_CHAMBER]=0;
			}
			if(invoker.weaponstatus[CHGGS_MAG]>0){
				invoker.weaponstatus[CHGGS_MAG]--;
				invoker.weaponstatus[CHGGS_CHAMBER]=2;
			}
		}
		#### D 1 {if(invoker.weaponstatus[CHGGS_MODDED]>0)A_SetTics(1);}
		#### A 0 A_ReFire("fire2");
		goto readyend;
	flash:
		FDGF A 0{
			let bbb=HDBulletActor.FireBullet(self,"HDB_776",speedfactor:1.1);
			if(
				frandom(32,ceilingz-floorz)<bbb.speed*0.2
			)A_AlertMonsters(200);

			//A_ZoomRecoil(1.15);
			A_StartSound("weapons/50calMG/fire",CHAN_WEAPON,0,1.50);
			invoker.weaponstatus[CHGGS_CHAMBER]=1;
			invoker.weaponstatus[CHGGS_HEAT]+=2;
		}
		FDGF A 0 bright{
			HDFlashAlpha(15);
			A_Light1();
		}
		FDGF A 1 bright
		{
			if(gunbraced())invoker.weaponstatus[CHGGS_HEAT]+=1;
			else A_GiveInventory("IsMoving",2);
			if(!binvulnerable
				&&(
					countinv("IsMoving")>7
					||floorz<pos.z
				)
			){
				A_GiveInventory("IsMoving",1);
			}
		}
		TNT1 A 0{
			//A_ZoomRecoil(0.5);
			A_Light0();
		}
		TNT1 A 0 A_MuzzleClimb(0,0,-frandom(0.1,0.3),-frandom(0.4,0.8));
		stop;
		goto lightdone;


	unloadchamber:
		FDGG A 0;
		#### A 4 offset(2,34) A_JumpIf(invoker.weaponstatus[CHGGS_CHAMBER]<1,"nope");
		#### B 4 offset(5,40) A_StartSound("weapons/autocannonload",CHAN_6,0,0.5);
		#### C 4 offset(9,47){
			class<actor>which=invoker.weaponstatus[CHGGS_CHAMBER]>1?"SevenMilAmmo":"HD_Downwards776Casing_PB";
			invoker.weaponstatus[CHGGS_CHAMBER]=0;
			A_SpawnItemEx(which,
				cos(pitch)*10,0,height-8-sin(pitch)*10,
				vel.x,vel.y,vel.z,
				0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
			);
			A_SpawnItemEx("HDFlyingBeltLink",
					cos(pitch)*10,0,height-10-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
		}
		#### D 4 offset(5,37);
		#### A 4 offset(2,36); //A_StartSound("weapons/devincenzia/fwd",CHAN_6,0,0.5);
		goto readyend;
	user4:
	unload:
		FDGG A 0;
		#### A 0{
			invoker.weaponstatus[0]|=CHGGF_JUSTUNLOAD;
			if(
				invoker.weaponstatus[CHGGS_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[CHGGS_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		FDGG A 0;
		#### A 0{
			invoker.weaponstatus[0]&=~CHGGF_JUSTUNLOAD;
			if(invoker.weaponstatus[CHGGS_MAG]>=250)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"HD_PB_7mmBeltBox")){
				if(
					invoker.weaponstatus[CHGGS_MAG]<0
					&&countinv("SevenMilAmmo")
				)setweaponstate("nope");
				else setweaponstate("nope");
				}
			}
			goto unmag;
	unmag:
		FDGG A 0;
		#### A 1 offset(0,34) A_SetCrosshair(21);
		#### A 2 offset(5,38);
		#### A 3 offset(10,42);
		#### A 5 offset(20,46) A_StartSound("weapons/kelenken/magout",CHAN_WEAPON);
		#### A 6 offset(30,52){
			A_MuzzleClimb(0.3,0.4);
		}
		#### A 0{
			int magamt=invoker.weaponstatus[CHGGS_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[CHGGS_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD_PB_7mmBeltBox",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD_PB_7mmBeltBox",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD_PB_7mmBeltBox",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		#### AAA 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
	magout:
		#### A 0{
			if(invoker.weaponstatus[0]&CHGGF_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		#### A 2 A_StartSound("weapons/pocket",CHAN_WEAPON);
		#### A 7 offset(34,54) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### A 11 offset(34,52) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### A 14 offset(32,50);
		#### A 5 offset(32,49){
			let mmm=hdmagammo(findinventory("HD_PB_7mmBeltBox"));
			if(mmm){
				invoker.weaponstatus[CHGGS_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/kelenken/magin",CHAN_BODY);
			}
			if(
				invoker.weaponstatus[CHGGS_MAG]<1
				||invoker.weaponstatus[CHGGS_CHAMBER]>0
			)setweaponstate("reloadend");
		}
		#### A 8 offset(32,51);
		#### A 5 offset(32,45);
	chamber:
		#### A 8;
		#### B 4 A_StartSound("weapons/autocannonrevolve",CHAN_7,0,1);
		#### C 4{
			if(invoker.weaponstatus[CHGGS_CHAMBER]==1){
				A_SpawnItemEx("HD_Downwards776Casing_PB",
					cos(pitch)*10,0,height-10-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				A_SpawnItemEx("HDFlyingBeltLink",
					cos(pitch)*10,0,height-10-sin(pitch)*10,
					vel.x,vel.y,vel.z,
					0,SXF_ABSOLUTEMOMENTUM|SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				invoker.weaponstatus[CHGGS_CHAMBER]=0;
			}
			if(invoker.weaponstatus[CHGGS_MAG]>0){
				invoker.weaponstatus[CHGGS_MAG]--;
				invoker.weaponstatus[CHGGS_CHAMBER]=2;
			}
		}
		#### DA 4;
		goto reloadend;

	reloadend:
		FDGG A 5 offset(30,52);
		#### A 4 offset(20,46);
		#### A 3 offset(10,42);
		#### A 3 offset(5,38);
		#### A 2 offset(0,34);
		goto nope;

	spawn:
		HWTP A -1 nodelay{
			if(invoker.weaponstatus[CHGGS_MAG]<0)frame=1;
		}
	}
	override void initializewepstats(bool idfa){
		weaponstatus[0]=0;
		weaponstatus[CHGGS_MAG]=250;
		weaponstatus[CHGGS_CHAMBER]=2;
	}
	override void loadoutconfigure(string input){
		int modded=getloadoutvar(input,"modded",1);
		if(modded>0)weaponstatus[CHGGS_MODDED]=clamp(modded,0,1);
	}
}

enum pb_weirdmgstatus{
	CHGGF_JUSTUNLOAD=1,

	CHGGS_FLAGS=0,
	CHGGS_MAG=1,
	CHGGS_CHAMBER=2,
	CHGGS_HEAT=3,
	CHGGS_MODDED=4,
};

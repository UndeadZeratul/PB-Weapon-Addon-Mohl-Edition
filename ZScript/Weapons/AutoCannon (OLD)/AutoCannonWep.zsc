// ------------------------------------------------------------
// 7.76mm LMG
// ------------------------------------------------------------
const HDLD_AUTOCANNON="paw";

class HD_DevinAutoCannon:HDWeapon{
	default{
		//$Category "Weapons/Hideous Destructor"
		//$Title "Arkoudi PRAW-35 ''Devincenzia''"
		//$Sprite "FALPA0"
		//PRAW stands for "Portable Rotary Artillery Weapon"

		//+hdweapon.fitsinbackpack
		obituary "%k can spread %o on a piece of toast.";
		weapon.selectionorder 41;
		weapon.slotnumber 6;
		weapon.kickback 30;
		weapon.bobrangex 0.4;
		weapon.bobrangey 1.1;
		weapon.bobspeed 1.8;
		scale 0.65;
		inventory.pickupmessage "You got the Portable Rotary Artillery Weapon!";
		hdweapon.barrelsize 32,3,4;
		hdweapon.refid HDLD_AUTOCANNON;
		hdweapon.nicename "Arkoudi PRAW-35 ''Devincenzia''";
	}
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse){return GetSpareWeaponRegular(newowner,reverse);}
	override double gunmass(){
		return 15+weaponstatus[ATCN_MAG]*0.15;
	}
	override double weaponbulk(){
		int mg=weaponstatus[ATCN_MAG];
		if(mg<0)return 200;
		else return (200+ENC_DEVINCENZIA_CLIP_LOADED)+mg*ENC_BRONTOSHELLLOADED;
	}
	override void DropOneAmmo(int amt){
		if(owner){
			amt=clamp(amt,1,10);
			if(owner.countinv("BrontornisRound"))owner.A_DropInventory("BrontornisRound",amt*8);
			else owner.A_DropInventory("PB_HDDevincenziaClip",amt);
		}
	}
	override string,double getpickupsprite(){return "ATCPA0",1.;}
	}
		override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl){
		if(sb.hudlevel == 1){
			int nextmagloaded=sb.GetNextLoadMag(hdmagammo(hpl.findinventory("HD_FALMag")));
			if(nextmagloaded>=100){
				sb.drawimage("FALMD0",(-50,-5),sb.DI_SCREEN_CENTER_BOTTOM);
			}else if(nextmagloaded<1){
				sb.drawimage("FALMC0",(-50,-5),sb.DI_SCREEN_CENTER_BOTTOM,alpha:nextmagloaded?0.6:1.);
			}else sb.drawbar(
				"FALMD0","FALMGREY",
				nextmagloaded,100,
				(-46,-3),-1,
				sb.SHADER_VERT,sb.DI_SCREEN_CENTER_BOTTOM
			);
			sb.drawnum(hpl.countinv("PB_HDDevincenziaClip"),-43,-8,sb.DI_SCREEN_CENTER_BOTTOM,font.CR_BLACK);
		}
		sb.drawwepcounter(hdw.weaponstatus[ATCN_AUTO],
			-20,-12,"RBRSA3A7","STFULAUT"
		);
		sb.drawwepnum(hdw.weaponstatus[ATCN_MAG],100);

		if(hdw.weaponstatus[ATCN_CHAMBER]==2){sb.drawwepdot(-26,-17,(3,2));
		}else if(hdw.weaponstatus[ATCN_CHAMBER]==1){sb.drawwepdot(-26,-22,(3,2));
		}else{sb.drawwepdot(-26,-27,(3,2));
		}
	}
	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int cx,cy,cw,ch;
		[cx,cy,cw,ch]=screen.GetClipRect();
		sb.SetClipRect(
			-16+bob.x,-4+bob.y,32,16,
			sb.DI_SCREEN_CENTER
		);
		vector2 bobb=bob*3;
		bobb.y=clamp(bobb.y,-8,8);
		sb.drawimage(
			"FALS_001",(0,0)+bobb,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP,
			alpha:0.9
		);
		sb.SetClipRect(cx,cy,cw,ch);
		sb.drawimage(
			"FALS_000",(0,-7)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_TOP
		);
	}
	override void startconfigure(){
		if(owner&&owner.player){
			weaponstatus[ATCN_AUTO]=clamp(
				cvar.getcvar("hd_libauto",owner.player).getint(),0,1
			);
		}
	}
	states{
	select0:
		FALG A 0 A_Overlay(2,"droop");
		FALG A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		F4LG A 0;
		#### # 0;
		goto select0big;
	deselect0:
		FALG A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		F4LG A 0;
		#### # 0;
		goto deselect0big;
		
	droop:
		TNT1 A 1{
			if(pitch<frandom(5,8)&&(!gunbraced())){
				if(countinv("IsMoving")>2 && invoker.weaponstatus[ATCN_MAG]>-1 && countinv("PowerStrength")<1){    
					A_MuzzleClimb(frandom(-0.075,0.075),
						frandom(0.1,clamp(1-pitch,0.05,0.6)));
				}else if (invoker.weaponstatus[ATCN_MAG]>-1){
					A_MuzzleClimb(frandom(-0.045,0.045),
						frandom(0.1,clamp(1-pitch,0.03,0.4)));
				}
			}
		}loop;
		
	ready:
		FALG A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		F4LG A 0;
		#### # 1{
			A_SetCrosshair(21);
			A_WeaponReady(WRF_ALL);
		}
		goto readyend;
	user3:
		---- A 0 A_MagManager("HD_FALMag");
		goto ready;
	altfire:
	althold:
		goto nope;
	hold:
		#### A 0{
			if(
				//full auto
				invoker.weaponstatus[ATCN_AUTO]==2
			)setweaponstate("fire2");
			else if(
				//burst
				invoker.weaponstatus[ATCN_AUTO]<1
			)setweaponstate("nope");
		}goto fire;
	user2:
	firemode:
		#### A 1			{
			int aut=invoker.weaponstatus[ATCN_AUTO];
			if(aut>=0){
				invoker.weaponstatus[ATCN_AUTO]=aut==0?1:0;
			}
		}goto nope;
	fire:
		---- A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		#### A 0;
		#### # 1;
	fire2:
		FALG A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		F4LG A 0;
		#### A 1 offset(0,36){
			if(invoker.weaponstatus[ATCN_CHAMBER]==2
			&&invoker.weaponstatus[ATCN_MAG]>0){
				A_GunFlash();
			}else if (invoker.weaponstatus[ATCN_CHAMBER]==2
			&&invoker.weaponstatus[ATCN_MAG]<0){
				setweaponstate("unloadchamber");
			}else{
				if(invoker.weaponstatus[ATCN_MAG]>0){
				setweaponstate("loadchamber");
				}else setweaponstate("nope");
			}
		}
		#### B 1 offset(0,38);
		#### A 1{
			if(invoker.weaponstatus[ATCN_CHAMBER]==1){
			double cosp=cos(pitch);
				A_SpawnItemEx("HDSpent7mm",
					cosp*6,0,height-11-sin(pitch)*6,
					cosp*2,1,2-sin(pitch),
					0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH
				);
				invoker.weaponstatus[ATCN_MAG]--;
				invoker.weaponstatus[ATCN_CHAMBER]=0;
				if(invoker.weaponstatus[ATCN_MAG]<=0){
					A_StartSound("weapons/FALboltfin",CHAN_WEAPON);
				}
			}
			invoker.weaponstatus[ATCN_CHAMBER]=2;
			if(invoker.weaponstatus[ATCN_AUTO]==2)A_SetTics(2);
			A_WeaponReady(WRF_NOFIRE);
		}
		---- A 0 A_ReFire();
		goto ready;
	flash:
		FALF A 0{
			actor p=spawn("HDBullet776",pos+(0,0,height-6),ALLOW_REPLACE);
			p.target=self;p.angle=angle;p.pitch=pitch;
			p.speed=440;
			p.vel+=(
				frandom(-0.1,0.1),frandom(-0.1,0.1),frandom(-0.1,0.1)
			);
			p.vel+=self.vel;

			A_ZoomRecoil(0.995);
			A_StartSound("weapons/FALshot",CHAN_WEAPON, volume:1.5);
			invoker.weaponstatus[ATCN_CHAMBER]=1;
		}
		FALF A 1 bright{
			HDFlashAlpha(frandom(32,64));
			A_Light1();
			A_ZoomRecoil(0.90);
			A_MuzzleClimb(0,0,-0.07,-0.14,-frandom(0.3,0.6),-frandom(1.,1.4),-frandom(0.2,0.4),-frandom(1.,1.4));
		}
		goto lightdone;


	unloadchamber:
		FALG A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		F4LG A 0;
		#### # 4 A_JumpIf(invoker.weaponstatus[ATCN_CHAMBER]<1,"nope");
		#### # 0{
			invoker.weaponstatus[ATCN_CHAMBER]=0;
			A_StartSound("weapons/FALboltfwd",CHAN_WEAPON
			);
		}
		#### # 10 offset(0,47);
		
		goto readyend;
	loadchamber:
		FALG A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		F4LG A 0;
		#### # 0 A_JumpIf(invoker.weaponstatus[ATCN_CHAMBER]>0,"nope");
		#### # 1 offset(0,34) A_StartSound("weapons/pocket",CHAN_WEAPON);
		#### # 5 offset(2,36);
		#### # 2 offset(5,40)A_StartSound("weapons/FALboltback",CHAN_WEAPON);
		#### # 4 offset(4,39){
				invoker.weaponstatus[ATCN_CHAMBER]=2;
			}
		#### # 6 offset(5,37);
		#### # 4 offset(2,36);
		#### # 2 offset(0,34);
		goto readyend;
	user4:
	unload:
		FALG A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		F4LG A 0;
		#### # 0{
			invoker.weaponstatus[0]|=ATCF_JUSTUNLOAD;
			if(
				invoker.weaponstatus[ATCN_MAG]>=0
			)setweaponstate("unmag");
			else if(invoker.weaponstatus[ATCN_CHAMBER]>0)setweaponstate("unloadchamber");
		}goto nope;
	reload:
		#### # 0{
			invoker.weaponstatus[0]&=~ATCF_JUSTUNLOAD;
			if(invoker.weaponstatus[ATCN_MAG]>=100)setweaponstate("nope");
			else if(HDMagAmmo.NothingLoaded(self,"HD_FALMag")){
				if(
					invoker.weaponstatus[ATCN_MAG]<0
					&&countinv("SevenMilAmmo")
				)setweaponstate("loadchamber");
				else setweaponstate("nope");
			}
		}goto unmag;
	unmag:
		F4LG A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]<0,"nomag_unmag");
		FALG C 1 A_SetCrosshair(21);
		FALG D 2;
		FALG E 3;
		FALG F 4 A_StartSound("weapons/FALdrumout",CHAN_WEAPON);
		FALG G 5{
			A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
			A_StartSound("weapons/smgmagmove",CHAN_WEAPON);
		}
		FALG H 4 A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
		FALG I 3;
		FALG # 0{
			int magamt=invoker.weaponstatus[ATCN_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[ATCN_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD_FALMag",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD_FALMag",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD_FALMag",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
		goto pocketmag;
	nomag_unmag:
		F5LG C 3 A_SetCrosshair(21);
		F5LG BA 4 A_MuzzleClimb(-frandom(0.4,0.8),frandom(0.4,1.4));
		F5LG # 0{
			int magamt=invoker.weaponstatus[ATCN_MAG];
			if(magamt<0){
				setweaponstate("magout");
				return;
			}
			invoker.weaponstatus[ATCN_MAG]=-1;
			if(
				(!PressingUnload()&&!PressingReload())
				||A_JumpIfInventory("HD_FALMag",0,"null")
			){
				HDMagAmmo.SpawnMag(self,"HD_FALMag",magamt);
				setweaponstate("magout");
			}else{
				HDMagAmmo.GiveMag(self,"HD_FALMag",magamt);
				A_StartSound("weapons/pocket",CHAN_WEAPON);
				setweaponstate("pocketmag");
			}
		}
	pocketmag:
		FALG I 3;
		#### # 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		#### # 0;
		#### I 7 offset(2,34) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### I 7 offset(6,32) A_StartSound("weapons/pocket",CHAN_WEAPON);
		#### I 7 offset(5,34) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		#### I 7 offset(4,34) A_StartSound("weapons/pocket",CHAN_WEAPON);
	magout:
		#### I 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]>-1,2);
		#### I 0;
		#### I 0{
			if(invoker.weaponstatus[0]&ATCF_JUSTUNLOAD)setweaponstate("reloadend");
			else setweaponstate("loadmag");
		}

	loadmag:
		FALG I 26 offset(2,34) A_StartSound("weapons/pocket",CHAN_WEAPON);
		FALG I 7 offset(4,34) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		FALG J 7 offset(3,38) A_MuzzleClimb(frandom(0.2,-0.8),frandom(-0.2,0.4));
		FALG K 7 offset(2,34) A_StartSound("weapons/smgmagmove",CHAN_WEAPON);
		FALG L 6 offset(3,38);
		FALG M 3 offset(0,34);
		FALG N 3{
			let mmm=hdmagammo(findinventory("HD_FALMag"));
			if(mmm){
				invoker.weaponstatus[ATCN_MAG]=mmm.TakeMag(true);
				A_StartSound("weapons/FALdrumin",CHAN_BODY);
			}
		}
		FALG O 3;
		#### # 0 A_JumpIf(invoker.weaponstatus[ATCN_CHAMBER]<=1,"chamber");
		#### # 0{
			if(
				invoker.weaponstatus[ATCN_MAG]<1
				||invoker.weaponstatus[ATCN_CHAMBER]>0
			)setweaponstate("reloadend");
		}
	chamber:
		FALG A 2 offset(33,50){
			invoker.weaponstatus[ATCN_CHAMBER]=0;
		}
		FALG A 4 offset(32,49) A_StartSound("weapons/smgchamber",CHAN_WEAPON);

	reloadend:
		---- A 0 A_JumpIf(invoker.weaponstatus[ATCN_MAG]<0,"nomag_reloadend");
		FALG PQRS 4;
		goto nope;
	nomag_reloadend:	
		F5LG ABC 4;
		goto nope;

	spawn:
		FALP AB -1 nodelay{
			if(invoker.weaponstatus[ATCN_MAG]<0)frame=1;
		}
	}
	override void initializewepstats(bool idfa){
		weaponspecial = 1337;
		weaponstatus[0]=0;
		weaponstatus[ATCN_MAG]=100;
		weaponstatus[ATCN_CHAMBER]=2;
		if(!idfa)weaponstatus[ATCN_AUTO]=0;
	}
}
enum FALstatus{
	ATCF_JUSTUNLOAD=1,

	ATCN_FLAGS=0,
	ATCN_MAG=1, //-1 unmagged
	ATCN_CHAMBER=2, //0 empty, 1 spent, 2 loaded
	ATCN_HEAT=3
};
